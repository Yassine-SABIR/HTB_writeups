# HTB Rhome YS4B

from sympy import discrete_log
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad
from Crypto.Util.number import long_to_bytes
from hashlib import sha256
import binascii

p = 46780020818205105739956253572959668234601923641446763105619487502016738608467655655243496242276793865707395038284595804997180339515334967056900866138902035322924395583
g = 42635087143907072239454413693031110794407027302331863839489998120450556711444669652346334039109737947405725237112358377543375307073064690131268735731170922873582194337
A = 30920842585872202681492913632996519428285408800256726978530134310770427701093419189851464303310798485871722311539075022716493475305832994726421935336173436197135571253
B = 34336949461923905551859182105574842774294325952482963632010591483333899466384747577761324473314511384408756416971407776111818249749308578471552294771421735316413127174

encrypted = "9feba7f3ace8d2a414523e599821cc292d1414c51934a2b38228b049126035f7"

b = discrete_log(p, B, g)

ss = pow(A, b, p)

key = sha256(long_to_bytes(ss)).digest()[:16]

cipher = AES.new(key, AES.MODE_ECB)
encrypted = bytes.fromhex(encrypted)
flag = unpad(cipher.decrypt(encrypted), 16).decode()

print(flag) # HTB{D0_1t_Your$3lf:)}



